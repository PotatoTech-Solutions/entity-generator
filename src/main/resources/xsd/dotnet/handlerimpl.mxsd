using Microsoft.AspNetCore.Mvc;

namespace <<projetcName>>.<<nameSpaceName>>
{
    public class <<entityName>>HandlerImpl : <<entityName>>Handler
    {


        public <<entityName>>HandlerImpl(I<<entityName>>Repository <<entity>>Repository) : base(<<entity>>Repository)
        {
        }

        public override ActionResult<ResponseData> GetAll(RequestData input)
        {
            var obj = _<<entity>>Repository.GetAll(input);
            return Ok(obj);
        }

        public override ActionResult<<<entityName>>DTO> Get(int id, string displayFields)
        {
            var obj = _<<entity>>Repository.FindById(id, displayFields);
            return <<entityName>>DTOConverter.ToDTO(obj);
        }

        public override ActionResult<<<entityName>>DTO> Save(<<entityName>>DTO input)
        {
            var dto = <<entityName>>DTOConverter.ToEntity(input);
            var output = _<<entity>>Repository.Add(dto);
            return <<entityName>>DTOConverter.ToDTO(output);
        }

        public override ActionResult<<<entityName>>DTO> Update(int id, <<entityName>>DTO input)
        {
            var dto = <<entityName>>DTOConverter.ToEntity(input);
            var output = _<<entity>>Repository.Update(id, dto);
            return Ok(<<entityName>>DTOConverter.ToDTO(output));
        }

        public override ActionResult<<<entityName>>DTO> Delete(int id)
        {
            _<<entity>>Repository.Delete(id);
            return Ok("deleted");
        }

        public override ActionResult<string> Save(<<entityName>>DTO input)
        {

            if(input != null){
                input.ForEach(e => {
                    var dto = <<entityName>>DTOConverter.ToEntity(e);
                    _<<entity>>Repository.Add(dto);
                }
            }
            return Ok($"Imported {input.Count()} registrys");
        }
    }
}

