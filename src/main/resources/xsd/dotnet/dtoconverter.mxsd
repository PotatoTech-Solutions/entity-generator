using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Runtime.Serialization;

namespace <<projetcName>>.<<nameSpaceName>>
{
    public class <<entityName>>DTOConverter
    {



        public static <<entityName>>Entity ToEntity(<<entityName>>DTO dto)
        {


            if(dto != null) {
                var entity = new <<entityName>>Entity();
                <<simpleFieldsEntity>>
                return entity;
            }
            return null;
        }

        public static <<entityName>>DTO ToDTO(<<entityName>>Entity entity)
        {


            if(entity != null){
                var dto = new <<entityName>>DTO();
                <<simpleFieldsDTO>>
                return dto;
            }
            return null;
        }

        public static List<<<entityName>>Entity> ToEntity(List<<<entityName>>DTO> obj)
        {
            if(obj != null){
                var list = new List<<<entityName>>Entity>();
                obj.ForEach(dto => {
                    var entity = ToEntity(dto);
                    list.Add(entity);
                });
                return list;
            }
            return null;
        }

        public static List<<<entityName>>DTO> ToDTO(List<<<entityName>>Entity> obj)
        {
            if(obj != null){
                var list = new List<<<entityName>>DTO>();
                obj.ForEach(entity => {
                    var dto = ToDTO(entity);
                    list.Add(dto);
                });
                return list;
            }
            return null;
        }
    }
}


